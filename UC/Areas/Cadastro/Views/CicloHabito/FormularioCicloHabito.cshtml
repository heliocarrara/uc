@model UC.Models.ViewModels.FormViewModels.VMFormCicloHabito

@using (Html.BeginForm("GravarFormulario", "CicloHabito", FormMethod.Post))
{
    var titulo = Model.horarioHabitoUID == 0 ? "Novo horário" : "Edição de horário";

    @Html.HiddenFor(m => m.habitoUID, Model.habitoUID)
    @Html.HiddenFor(m => m.cicloHabitoUID, Model.cicloHabitoUID)
    @Html.HiddenFor(m => m.horarioHabitoUID, Model.horarioHabitoUID)
    <br />
    <div class="panel panel-info">
        <div class="panel-heading">
            <h1 class="text-center">@titulo</h1>
        </div>
        <div class="panel-body list-group">
            <div class="list-group-item">
                <label>Tipo de Ciclo:</label>
                @Html.DropDownListFor(m => m.TipoCiclo, Model.ListaTipoCiclo, new { @class = "form-control" })
            </div>
            <div class="list-group-item">
                <label>Dia da Semana:</label>
                @Html.DropDownListFor(m => m.DiaSemanal, Model.ListaDiaSemanal, "Todos os dias", new { @class = "form-control" })
            </div>
            <div class="list-group-item">
                <label>Horário de Início: HH:MM</label>
                <input type="time" id="@Html.IdFor(m => m.HorarioInicio)" name="@Html.NameFor(m => m.HorarioInicio)" value="@Model.HorarioInicio.ToString("hh\\:mm")" class="form-control" />
            </div>
            <div class="list-group-item">
                <label>Horário de Término: HH:MM</label>
                <input type="time" id="@Html.IdFor(m => m.HorarioTermino)" name="@Html.NameFor(m=>m.HorarioTermino)" value="@Model.HorarioTermino.ToString("hh\\:mm")" class="form-control" />
            </div>
        </div>
        <div class="panel-footer">
            <input type="submit" class="btn btn-success btn-sm" value="Salvar" onclick="return validarFormulario();" />
            <span style="float:right;">
                @Html.ActionLink("Excluir", "ExcluirHorario", "CicloHabito", new { horarioHabitoUID = Model.horarioHabitoUID, Area = "Cadastro" }, new { @class = "btn btn-danger btn-sm" })
            </span>
        </div>
    </div>
}

<script type="text/javascript">
    function validarFormulario() {
        if (!validarHorarioPreenchido('#@Html.IdFor(m => m.HorarioInicio)')) {
            alert('Selecione o horário de início');
            return false;
        }
        if (!validarHorarioPreenchido('#@Html.IdFor(m => m.HorarioTermino)')) {
            alert('Selecione o horário de término');
            return false;
        }

        return horarioCondizem();
    }

    function validarHorarioPreenchido(campo) {
        return $(campo).val().trim() !== '';
    }

    function horarioCondizem() {
        var horaInicio = new Date();
        horaInicio.setHours(parseInt($(campoInicio).val().substring(0, 2), 10));
        horaInicio.setMinutes(parseInt($(campoInicio).val().substring(3, 5), 10));

        var horaTermino = new Date();
        horaTermino.setHours(parseInt($(campoTermino).val().substring(0, 2), 10));
        horaTermino.setMinutes(parseInt($(campoTermino).val().substring(3, 5), 10));

        if (horaInicio >= horaTermino) {
            alert('Horário de início deve ser anterior ao de término');
            return false;
        }

        return true;
    }

</script>

